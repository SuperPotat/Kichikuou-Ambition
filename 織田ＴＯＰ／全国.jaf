void 織田ＴＯＰ／全国()
{
	lint iim = 0;
	lint rr = 0;
	lint ra = 0;
	lint aa = 0;
	lint a1 = 0;
	lint a2 = 0;
	lint bb = 0;
	lint ii2 = 0;
	lint iic = 0;
	lint aa1 = 0;
	lint aa2 = 0;
	lint iic2 = 0;
	lint ii = ◆Ｐｉｉ;
	lint loop = 0;
	if (◆ターン == 1)
	{
		ＧＦ[151] = 15;
		全国トップイベント();
	}
	if (支配国数(◆Ｐｉｉ) > 9)
	{
		ＧＦ[140] = 1;
	}
	else
	{
		ＧＦ[140] = 0;
	}
	◆ＴＳ = 0;
	aa = Ｃ技能総数取得(217, 999);
	if (aa > 1)
	{
		◆コマンド実行数 = 3;
		◆コマンド実行数最大 = 3;
	}
	else
	{
		◆コマンド実行数 = 2;
		◆コマンド実行数最大 = 2;
	}
	if (勢力[ii].混乱状態 == 1)
	{
		Ｐ勢力看板(◆Ｐｉｉ, "National turmoil, only one action flag.", 0, false);
		勢力[ii].混乱状態 = 0;
		◆コマンド実行数 = 1;
		◆コマンド実行数最大 = 1;
	}
	if ((◆Ｐｉｉ == 1 && 国[31].支配国 == 1) || (◆Ｐｉｉ == 2 && 国[27].支配国 == 2) || (◆Ｐｉｉ == 4 && 国[20].支配国 == 4) || (◆Ｐｉｉ == 5 && 国[18].支配国 == 5) || (◆Ｐｉｉ == 6 && 国[13].支配国 == 6) || (◆Ｐｉｉ == 7 && 国[12].支配国 == 7) || (◆Ｐｉｉ == 8 && 国[1].支配国 == 8) || (◆Ｐｉｉ == 9 && 国[5].支配国 == 9) || (◆Ｐｉｉ == 10 && 国[8].支配国 == 10) || (◆Ｐｉｉ == 11 && 国[16].支配国 == 11) || (◆Ｐｉｉ == 12 && 国[32].支配国 == 12) || (◆Ｐｉｉ == 15 && 国[24].支配国 == 15) || (◆Ｐｉｉ == 16 && 国[23].支配国 == 16) || (◆Ｐｉｉ == 18 && 国[21].支配国 == 18) || (◆Ｐｉｉ == 19 && 国[6].支配国 == 19))
	{
		Ｐ勢力看板(◆Ｐｉｉ, "Retaining control of the capital, +1000 gold.", 0, false);
		お金＋(1000);
	}
	iic = Ｃ技能キャラ取得(105, 999);
	if (iic != 0)
	{
		aa = 20;
		Ｃ兵数追加(aa, iic, 999);
	}
	iic = Ｃ技能キャラ取得(268, 999);
	if (iic != 0)
	{
		aa = 20;
		Ｃ兵数追加(aa, iic, 999);
	}
	iic = Ｃ技能キャラ取得(256, 999);
	if (iic != 0)
	{
		aa = 9;
		Ｃ兵数追加(aa, iic, 999);
	}
	iic = アイテム保有者番号(54);
	if (iic != 0)
	{
		aa = 20;
		Ｃ兵数追加(aa, iic, 999);
	}
	iic = アイテム保有者番号(51);
	if (iic != 0)
	{
		キャラ好感度追加(1, iic, 999);
	}
	iic = アイテム保有者番号(52);
	if (iic != 0)
	{
		キャラ好感度追加(2, iic, 999);
	}
	iic = アイテム保有者番号(53);
	if (iic != 0)
	{
		aa = 50;
		Ｃ兵数補充(aa, iic, 999);
	}
	if (ＧＦ[218] == 1)
	{
		キャラ重要変更(0, 1000, ii2);
		キャラ重要変更(0, 1001, ii2);
		キャラ重要変更(0, 1003, ii2);
		キャラ重要変更(0, 1004, ii2);
		キャラ重要変更(0, 1005, ii2);
		キャラ重要変更(0, 1006, ii2);
		キャラ重要変更(0, 1007, ii2);
		キャラ重要変更(0, 1008, ii2);
		キャラ重要変更(0, 1011, ii2);
		キャラ重要変更(0, 1012, ii2);
		キャラ重要変更(0, 1013, ii2);
		キャラ重要変更(0, 1017, ii2);
		キャラ重要変更(0, 1018, ii2);
		キャラ重要変更(0, 1019, ii2);
		キャラ重要変更(0, 1020, ii2);
		キャラ重要変更(0, 1021, ii2);
		キャラ重要変更(0, 1022, ii2);
		キャラ重要変更(0, 1023, ii2);
		キャラ重要変更(0, 1024, ii2);
		キャラ重要変更(0, 1025, ii2);
		キャラ重要変更(0, 1026, ii2);
		キャラ重要変更(0, 1027, ii2);
		キャラ重要変更(0, 1028, ii2);
		キャラ重要変更(0, 1029, ii2);
		キャラ重要変更(0, 1031, ii2);
		キャラ重要変更(0, 1035, ii2);
		キャラ重要変更(0, 1040, ii2);
		キャラ重要変更(0, 1041, ii2);
		キャラ重要変更(0, 1042, ii2);
		キャラ重要変更(0, 1043, ii2);
		キャラ重要変更(0, 1045, ii2);
		キャラ重要変更(0, 1048, ii2);
		キャラ重要変更(0, 1050, ii2);
		キャラ重要変更(0, 1053, ii2);
		キャラ重要変更(0, 1054, ii2);
		キャラ重要変更(0, 1055, ii2);
		キャラ重要変更(0, 1056, ii2);
		キャラ重要変更(0, 1057, ii2);
		キャラ重要変更(0, 1059, ii2);
		キャラ重要変更(0, 1060, ii2);
		キャラ重要変更(0, 1061, ii2);
		キャラ重要変更(0, 1062, ii2);
		キャラ重要変更(0, 1071, ii2);
		キャラ重要変更(0, 1064, ii2);
		キャラ重要変更(0, 1065, ii2);
		キャラ重要変更(0, 1066, ii2);
		キャラ重要変更(0, 1067, ii2);
		キャラ重要変更(0, 1068, ii2);
		キャラ重要変更(0, 1069, ii2);
		キャラ重要変更(0, 1073, ii2);
		キャラ重要変更(0, 1076, ii2);
		キャラ重要変更(0, 1081, ii2);
		キャラ重要変更(0, 1086, ii2);
		キャラ重要変更(0, 1091, ii2);
		キャラ重要変更(0, 1093, ii2);
		キャラ重要変更(0, 1094, ii2);
		キャラ重要変更(0, 1096, ii2);
		キャラ重要変更(0, 1097, ii2);
		キャラ重要変更(0, 1098, ii2);
		キャラ重要変更(0, 1099, ii2);
		キャラ重要変更(0, 1100, ii2);
		キャラ重要変更(0, 1109, ii2);
		キャラ重要変更(0, 1110, ii2);
		キャラ重要変更(0, 1112, ii2);
		キャラ重要変更(0, 1113, ii2);
		キャラ重要変更(0, 1115, ii2);
		キャラ重要変更(0, 1116, ii2);
		キャラ重要変更(0, 1120, ii2);
		キャラ重要変更(0, 1121, ii2);
		キャラ重要変更(0, 1122, ii2);
		キャラ重要変更(0, 1157, ii2);
		キャラ重要変更(0, 1313, ii2);
		キャラ重要変更(0, 1315, ii2);
		キャラ重要変更(0, 1343, ii2);
		キャラ重要変更(0, 1347, ii2);
		キャラ重要変更(0, 1351, ii2);
		キャラ重要変更(0, 1355, ii2);
		キャラ重要変更(0, 1356, ii2);
		キャラ重要変更(0, 1380, ii2);
		キャラ重要変更(0, 1387, ii2);
		キャラ重要変更(0, 1399, ii2);
		キャラ重要変更(0, 1417, ii2);
		キャラ重要変更(0, 1418, ii2);
		キャラ重要変更(0, 1419, ii2);
		キャラ重要変更(0, 1458, ii2);
		キャラ重要変更(0, 1468, ii2);
		キャラ重要変更(0, 1561, ii2);
		キャラ重要変更(0, 1000, 999);
		キャラ重要変更(0, 1001, 999);
		キャラ重要変更(0, 1003, 999);
		キャラ重要変更(0, 1004, 999);
		キャラ重要変更(0, 1005, 999);
		キャラ重要変更(0, 1006, 999);
		キャラ重要変更(0, 1007, 999);
		キャラ重要変更(0, 1008, 999);
		キャラ重要変更(0, 1011, 999);
		キャラ重要変更(0, 1012, 999);
		キャラ重要変更(0, 1013, 999);
		キャラ重要変更(0, 1017, 999);
		キャラ重要変更(0, 1018, 999);
		キャラ重要変更(0, 1019, 999);
		キャラ重要変更(0, 1020, 999);
		キャラ重要変更(0, 1021, 999);
		キャラ重要変更(0, 1022, 999);
		キャラ重要変更(0, 1023, 999);
		キャラ重要変更(0, 1024, 999);
		キャラ重要変更(0, 1025, 999);
		キャラ重要変更(0, 1026, 999);
		キャラ重要変更(0, 1027, 999);
		キャラ重要変更(0, 1028, 999);
		キャラ重要変更(0, 1029, 999);
		キャラ重要変更(0, 1031, 999);
		キャラ重要変更(0, 1035, 999);
		キャラ重要変更(0, 1040, 999);
		キャラ重要変更(0, 1041, 999);
		キャラ重要変更(0, 1042, 999);
		キャラ重要変更(0, 1043, 999);
		キャラ重要変更(0, 1045, 999);
		キャラ重要変更(0, 1048, 999);
		キャラ重要変更(0, 1050, 999);
		キャラ重要変更(0, 1053, 999);
		キャラ重要変更(0, 1054, 999);
		キャラ重要変更(0, 1055, 999);
		キャラ重要変更(0, 1056, 999);
		キャラ重要変更(0, 1057, 999);
		キャラ重要変更(0, 1059, 999);
		キャラ重要変更(0, 1060, 999);
		キャラ重要変更(0, 1061, 999);
		キャラ重要変更(0, 1062, 999);
		キャラ重要変更(0, 1071, 999);
		キャラ重要変更(0, 1064, 999);
		キャラ重要変更(0, 1065, 999);
		キャラ重要変更(0, 1066, 999);
		キャラ重要変更(0, 1067, 999);
		キャラ重要変更(0, 1068, 999);
		キャラ重要変更(0, 1069, 999);
		キャラ重要変更(0, 1073, 999);
		キャラ重要変更(0, 1076, 999);
		キャラ重要変更(0, 1081, 999);
		キャラ重要変更(0, 1086, 999);
		キャラ重要変更(0, 1091, 999);
		キャラ重要変更(0, 1093, 999);
		キャラ重要変更(0, 1094, 999);
		キャラ重要変更(0, 1096, 999);
		キャラ重要変更(0, 1097, 999);
		キャラ重要変更(0, 1098, 999);
		キャラ重要変更(0, 1099, 999);
		キャラ重要変更(0, 1100, 999);
		キャラ重要変更(0, 1109, 999);
		キャラ重要変更(0, 1110, 999);
		キャラ重要変更(0, 1112, 999);
		キャラ重要変更(0, 1113, 999);
		キャラ重要変更(0, 1115, 999);
		キャラ重要変更(0, 1116, 999);
		キャラ重要変更(0, 1120, 999);
		キャラ重要変更(0, 1121, 999);
		キャラ重要変更(0, 1122, 999);
		キャラ重要変更(0, 1157, 999);
		キャラ重要変更(0, 1313, 999);
		キャラ重要変更(0, 1315, 999);
		キャラ重要変更(0, 1343, 999);
		キャラ重要変更(0, 1347, 999);
		キャラ重要変更(0, 1351, 999);
		キャラ重要変更(0, 1355, 999);
		キャラ重要変更(0, 1356, 999);
		キャラ重要変更(0, 1380, 999);
		キャラ重要変更(0, 1387, 999);
		キャラ重要変更(0, 1399, 999);
		キャラ重要変更(0, 1417, 999);
		キャラ重要変更(0, 1418, 999);
		キャラ重要変更(0, 1419, 999);
		キャラ重要変更(0, 1458, 999);
		キャラ重要変更(0, 1468, 999);
		キャラ重要変更(0, 1561, 999);
	}
	a1 = Ｃ技能総数取得(118, 999);
	if (a1 != 0)
	{
		if (a1 > 5)
		{
			a1 = 5;
		}
		a2 = 倍率計算関数(◆金, a1 * 4);
		LOG_TADA("　財テク技能保有者（" + string(a1) + "）　　" + string(a2) + "＝" + string(◆金) + "＊" + string(a1 * 4) + "　\n");
		if (a2 > 0 && ◆予備０５ == 0)
		{
			Ｐ勢力看板(◆Ｐｉｉ, "Asset tech: " + string(a2) + " Gold obtained.", 0, false);
		}
		お金＋(a2);
		Ｐ勢力看板／更新();
		マップ_情報更新(true);
	}
	if (キャラ確認(1491, 0, 0, 0) && ◆金 > 9)
	{
		aa = RAND(◆金 / 2);
		Ｐ勢力看板(◆Ｐｉｉ, "Akihime uses " + string(aa) + " Gold", 0, false);
		お金−(aa);
		Ｐ勢力看板／更新();
		マップ_情報更新(true);
	}
	bb = 総国力(◆Ｐｉｉ) * 30;
	LOG_TADA("　基本国力　" + string(bb) + "\n");
	aa = Ｃ技能総数取得(117, 999);
	if (aa != 0)
	{
		aa = 100 + aa * 5;
		bb = 倍率計算関数(bb, aa);
	}
	aa = 建築物数(ii, 2);
	if (aa != 0)
	{
		aa = 100 + aa * 3;
		bb = 倍率計算関数(bb, aa);
	}
	aa = 建築物数(ii, 20);
	if (aa != 0)
	{
		aa = 100 + aa * 9;
		bb = 倍率計算関数(bb, aa);
	}
	if (アイテム保有者番号(76) != 0)
	{
		bb = 倍率計算関数(bb, 110);
	}
	if (アイテム保有者番号(77) != 0)
	{
		bb = 倍率計算関数(bb, 110);
	}
	if (アイテム保有者番号(78) != 0)
	{
		bb = 倍率計算関数(bb, 110);
	}
	aa = 建築物数(ii, 3);
	bb += aa * 200;
	aa = 建築物数(ii, 30);
	bb += aa * 1000;
	aa = 0;
	if (総必要国力(999) > 総国力(999))
	{
		aa = 1;
		bb = bb / 4;
	}
	a1 = Ｃ技能総数取得(117, 999);
	if (a1 != 0)
	{
		a1 = 100 + a1 * 5;
		bb = 倍率計算関数(bb, a1);
	}
	bb = bb * 2;
	if (aa == 0)
	{
		Ｐ勢力看板(◆Ｐｉｉ, "Gold collected: " + string(bb) + " Gold obtained.", 0, false);
	}
	if (aa == 1)
	{
		Ｐ勢力看板(◆Ｐｉｉ, "Need national power. Less income: " + string(bb) + "", 0, false);
	}
	お金＋(bb);
	Ｐ勢力看板／更新();
	マップ_情報更新(true);
	if (キャラ確認(1584, 0, 0, 0))
	{
		Ｐ勢力看板(◆Ｐｉｉ, "Golden Haniwa sheds coins: +1000 Gold", 0, false);
		お金＋(1000);
		Ｐ勢力看板／更新();
		マップ_情報更新(true);
	}
	if (キャラ確認(1351, 0, 0, 0))
	{
		Ｐ勢力看板(◆Ｐｉｉ, "Copandon Dott invests wisely: +1000 Gold", 0, false);
		お金＋(1000);
		Ｐ勢力看板／更新();
		マップ_情報更新(true);
	}
	if (◆Ｐｉｉ == 17 && ＧＦ[255] == 0)
	{
		ra = RAND(支配国数(◆Ｐｉｉ) + 2);
		if (ra != 1)
		{
			aa = RAND(◆金 / 5);
			Ｐ勢力看板(◆Ｐｉｉ, "Stocks are up: +" + string(aa) + " Gold", 0, false);
			お金＋(aa);
			Ｐ勢力看板／更新();
			マップ_情報更新(true);
		}
		if (ra == 1)
		{
			aa = RAND(◆金 / 2);
			Ｐ勢力看板(◆Ｐｉｉ, "Stocks are down: -" + string(aa) + " Gold", 0, false);
			お金−(aa);
			Ｐ勢力看板／更新();
			マップ_情報更新(true);
		}
	}
	if (◆Ｐｉｉ == 17 && ＧＦ[255] == 1)
	{
		ra = RAND(支配国数(◆Ｐｉｉ) + 9);
		if (ra != 1)
		{
			ＧＦ[255] = 0;
			aa = RAND(◆金 / 5);
			Ｐ勢力看板(◆Ｐｉｉ, "Stocks are up: +" + string(aa) + " Gold", 0, false);
			お金＋(aa);
			Ｐ勢力看板／更新();
			マップ_情報更新(true);
		}
		if (ra == 1)
		{
			ＧＦ[255] = 0;
			aa = RAND(◆金 / 2);
			Ｐ勢力看板(◆Ｐｉｉ, "Stocks are down: -" + string(aa) + " Gold", 0, false);
			お金−(aa);
			Ｐ勢力看板／更新();
			マップ_情報更新(true);
		}
	}
	aa1 = 0;
	aa2 = 0;
	if (アイテム保有者番号(81) != 0)
	{
		aa1 += 3;
	}
	if (アイテム保有者番号(82) != 0)
	{
		aa1 += 5;
	}
	if (アイテム保有者番号(83) != 0)
	{
		aa1 += 7;
	}
	if (アイテム保有者番号(84) != 0)
	{
		aa1 += 9;
	}
	if (アイテム保有者番号(85) != 0)
	{
		aa2 += 1;
		gs[ii][アイテム保有者番号(85)].行動 = 1;
	}
	if (aa1 != 0 || aa2 != 0)
	{
		bb = 0;
		for (iic = 1; iic < 61; iic++)
		{
			if (gs[ii][iic].番号 != 0)
			{
				Ｃ兵数追加(aa2, iic, 999);
				aa = Ｃ兵数補充(aa1, iic, 999);
				bb += aa;
			}
		}
		if (bb != 0 && ◆予備０５ == 0)
		{
			Ｐ勢力看板(1, "Healing items heal " + string(bb) + " troops", 0, false);
		}
		Ｐ勢力看板／更新();
	}
	aa = 建築物数(ii, 1);
	aa += 建築物数(ii, 10) * 3;
	bb = 建築物数(ii, 4);
	bb += 建築物数(ii, 40) * 5;
	LOG_TADA("　　自然増加　" + string(aa) + "　　自然回復　" + string(bb * 10) + "\n");
	for (iic = 1; iic < 31; iic++)
	{
		if (gs[ii][iic].番号 != 0)
		{
			Ｃ兵数追加(aa, iic, ii);
			Ｃ兵数補充(bb * 10, iic, ii);
			if (gs[ii][iic].兵種 == 7)
			{
				Ｃ兵数補充(9999, iic, ii);
			}
			if (gs[ii][iic].兵種 == 20)
			{
				Ｃ兵数補充(9999, iic, ii);
			}
			if (◆Ｐｉｉ == 15)
			{
				Ｃ兵数補充(50, iic, ii);
			}
		}
	}
	if (建築物数(ii, 5) > 1)
	{
		ra = RAND(建築物数(ii, 5));
		if (ra > 2 && ra < 7)
		{
			Ｐ勢力看板(◆Ｐｉｉ, "Obtained JAWS Screen", 0, false);
			アイテム取得(15);
		}
		if (ra > 6 && ra < 11)
		{
			Ｐ勢力看板(◆Ｐｉｉ, "Obtained Expert's Drum", 0, false);
			アイテム取得(14);
		}
		if (ra > 10 && ra < 15)
		{
			Ｐ勢力看板(◆Ｐｉｉ, "Obtained Kanou Scroll", 0, false);
			アイテム取得(13);
		}
		if (ra > 14 && ra < 19)
		{
			Ｐ勢力看板(◆Ｐｉｉ, "Obtained SenriQ's Cup", 0, false);
			アイテム取得(12);
		}
		if (ra == 19)
		{
			Ｐ勢力看板(◆Ｐｉｉ, "Obtained Attack Textbook2", 0, false);
			アイテム取得(21);
		}
		if (ra == 20)
		{
			Ｐ勢力看板(◆Ｐｉｉ, "Obtained Defense Textbook2", 0, false);
			アイテム取得(22);
		}
		if (ra == 21)
		{
			Ｐ勢力看板(◆Ｐｉｉ, "Obtained Intelligence Textbook2", 0, false);
			アイテム取得(23);
		}
		if (ra == 22)
		{
			Ｐ勢力看板(◆Ｐｉｉ, "Obtained Speed Textbook2", 0, false);
			アイテム取得(24);
		}
		if (ra > 22)
		{
			Ｐ勢力看板(◆Ｐｉｉ, "Obtained Kanou Scroll", 0, false);
			アイテム取得(13);
		}
	}
	if (勢力[ii].勢力予備６ > 0)
	{
		勢力[ii].勢力予備６--;
		if (勢力[ii].勢力予備６ == 0)
		{
			for (loop = 1; loop < 20; loop++)
			{
				if (loop == ii)
				{
					continue;
				}
				if (勢力[ii].国状態[loop] == 1)
				{
					勢力[ii].国状態[loop] = 2;
					勢力[loop].国状態[ii] = 2;
					Ｐ勢力看板(ii, 勢力[loop].名前 + ": Declaring war...", iim, false);
				}
			}
			勢力[ii].状態 = 2;
		}
	}
	if (ii != 3 && 支配国数(3) != 0)
	{
		勢力[3].状態 = 2;
	}
	if (ii != 3 && 支配国数(3) == 0)
	{
		勢力[3].状態 = 9;
	}
	if (((◆ターン % 2) == 0 || キャラ数(21) < 6) && キャラ数(ii) < 30)
	{
		if (キャラ数(ii) < 30)
		{
			iic = 勢力空き番号(ii);
			if (iic != 0)
			{
				iic = 乱武将登録(ii, 0, 0, "", 0);
				gs[ii][iic].兵数最大 = ベース兵力取得(999, 100);
				gs[ii][iic].兵数 = 1;
				Ｐ勢力看板(ii, gs[ii][iic].名前 + "[" + 文字列／兵種(gs[ii][iic].兵種) + "] joins the army", 0, false);
			}
		}
	}
	if ((◆ターン % 2) == 1 && キャラ数(ii) < 30 && キャラ数(21) > 5)
	{
		iic2 = 乱キャラ取得(21, 0, 0);
		iic = 勢力空き番号(ii);
		if (iic2 != 0 && iic != 0)
		{
			gs[ii][iic] = gs[21][iic2];
			gs[ii][iic].兵数最大 = ベース兵力取得(999, 100);
			gs[ii][iic].重要 = 0;
			gs[21][iic2].番号 = 0;
			gs[ii][iic].兵数 = 1;
			Ｐ勢力看板(ii, gs[ii][iic].名前 + "[" + 文字列／兵種(gs[ii][iic].兵種) + "] joins the army", 0, false);
		}
	}
	if ((ii == 13 || キャラ確認(1313, 0, 0, 0)) && ＧＦ[254] < 99 && ＧＦ[253] == 1)
	{
		ＧＦ[254]++;
		Ｐ勢力看板(ii, "Human extinction is at " + string(ＧＦ[254]) + "%", 0, false);
	}
	if (キャラ数(21) < 60 && キャラ確認(1564, 0, 0, 0))
	{
		ra = RAND(4);
		if (ra == 4)
		{
			キャラ消去(1564, 999);
			武将強制登録(21, 1564, 10);
			Ｐ勢力看板(ii, "Aten Gnu stopped working.", 0, false);
		}
	}
	if (キャラ数(21) < 51 && ◆ターン > 4 && ＧＦ[194] == 0)
	{
		ＧＦ[194]++;
		武将強制登録(21, 1397, 5);
		武将強制登録(21, 1480, 5);
		武将強制登録(21, 1463, 5);
		武将強制登録(21, 1456, 5);
		武将強制登録(21, 1438, 5);
		武将強制登録(21, 1405, 5);
		武将強制登録(21, 1404, 5);
		武将強制登録(21, 1123, 5);
		武将強制登録(21, 1368, 5);
		武将強制登録(21, 1335, 5);
		勢力キャラ行動初期化(21);
		Ｐ勢力看板(ii, "Miracle Tou has been spotted.", 0, false);
	}
	if (キャラ数(21) < 46 && ◆ターン > 9 && ＧＦ[194] == 1)
	{
		ＧＦ[194]++;
		武将強制登録(21, 1398, 5);
		武将強制登録(21, 1557, 5);
		武将強制登録(21, 1558, 5);
		武将強制登録(21, 1559, 5);
		武将強制登録(21, 1505, 5);
		武将強制登録(21, 1492, 5);
		武将強制登録(21, 1450, 5);
		武将強制登録(21, 1445, 5);
		武将強制登録(21, 1198, 5);
		武将強制登録(21, 1608, 5);
		武将強制登録(21, 1609, 5);
		武将強制登録(21, 1610, 5);
		武将強制登録(21, 1611, 5);
		武将強制登録(21, 1612, 5);
		武将強制登録(21, 1615, 5);
		武将強制登録(21, 1616, 5);
		武将強制登録(21, 1617, 5);
		武将強制登録(21, 1618, 5);
		武将強制登録(21, 1619, 5);
		if (ＧＦ[415] == 0)
		{
			武将強制登録(21, 1555, 5);
		}
		if (ＧＦ[415] == 1)
		{
			武将強制登録(21, 1399, 5);
			gs[ii][iic].重要 = 0;
		}
		勢力キャラ行動初期化(21);
		Ｐ勢力看板(ii, "Wenlina has been spotted.", 0, false);
	}
	if (キャラ数(21) < 56 && ◆ターン > 14 && ＧＦ[194] == 2)
	{
		ＧＦ[194]++;
		武将強制登録(21, 1401, 5);
		武将強制登録(21, 1205, 5);
		if (ＧＦ[415] == 1)
		{
			武将強制登録(21, 1116, 5);
			gs[ii][iic].重要 = 0;
		}
		勢力キャラ行動初期化(21);
		Ｐ勢力看板(ii, "Seracholas has been spotted.", 0, false);
	}
	if (キャラ数(21) < 56 && ◆ターン > 19 && ＧＦ[194] == 3)
	{
		ＧＦ[194]++;
		武将強制登録(21, 1400, 5);
		武将強制登録(21, 1139, 5);
		勢力キャラ行動初期化(21);
		Ｐ勢力看板(ii, "Bezeleye has been spotted.", 0, false);
	}
	if (キャラ数(21) < 55 && ◆ターン > 24 && ＧＦ[194] == 4)
	{
		ＧＦ[194]++;
		武将強制登録(21, 1414, 5);
		武将強制登録(21, 1124, 5);
		武将強制登録(21, 1607, 5);
		武将強制登録(21, 1063, 5);
		武将強制登録(21, 1584, 5);
		武将強制登録(21, 1544, 5);
		勢力キャラ行動初期化(21);
		Ｐ勢力看板(ii, "Shibagami has been spotted.", 0, false);
	}
	if (キャラ数(21) < 1 && ＧＦ[194] == 6)
	{
		ＧＦ[194]++;
		武将強制登録(21, 1126, 5);
		武将強制登録(21, 1127, 5);
		武将強制登録(21, 1131, 5);
		武将強制登録(21, 1132, 5);
		武将強制登録(21, 1133, 5);
		武将強制登録(21, 1135, 5);
		武将強制登録(21, 1147, 5);
		武将強制登録(21, 1148, 5);
		武将強制登録(21, 1149, 5);
		武将強制登録(21, 1150, 5);
		武将強制登録(21, 1154, 5);
		武将強制登録(21, 1155, 5);
		武将強制登録(21, 1158, 5);
		武将強制登録(21, 1159, 5);
		武将強制登録(21, 1160, 5);
		武将強制登録(21, 1161, 5);
		武将強制登録(21, 1162, 5);
		武将強制登録(21, 1163, 5);
		武将強制登録(21, 1164, 5);
		武将強制登録(21, 1165, 5);
		武将強制登録(21, 1169, 5);
		武将強制登録(21, 1172, 5);
		武将強制登録(21, 1176, 5);
		武将強制登録(21, 1177, 5);
		武将強制登録(21, 1181, 5);
		武将強制登録(21, 1182, 5);
		武将強制登録(21, 1339, 5);
		武将強制登録(21, 1063, 5);
		勢力キャラ行動初期化(21);
		Ｐ勢力看板(ii, "Some bullshit has been spotted.", 0, false);
	}
	if (ii == 11)
	{
		Ｐ勢力看板(ii, "Don't believe their lies...", 0, false);
	}
	Ｐ勢力看板(ii, "Thinking...", 0, true);
	ＧＦ[520] = RAND(32);
	if (キャラ数(21) < 60 && ＧＦ[185] != 0)
	{
		lint ii2 = ◆Ｐｉｉ;
		for (iic = 1; iic < 22; iic++)
		{
			switchControl(iic);
			if (キャラ確認(1403, 0, 0, 0))
			{
				switchControl(ii2);
				return;
			}
		}
		switchControl(ii2);
		武将強制登録(21, 1403, 5);
		勢力キャラ行動初期化(21);
		Ｐ勢力看板(ii, "A wandering adventurer has been spotted.", 0, false);
	}
	return;
}
