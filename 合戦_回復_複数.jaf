bool 合戦_回復_複数(int n武将番号, int n行動, ref array@int anArray)
{
	int i = 0;
	int cnt = anArray.Numof();
	int nターゲット = 0;
	if (cnt <= 0)
	{
		return false;
	}
	戦闘エフェクト_作成(n武将番号, n行動, false);
	合戦_回復処理(n武将番号, n武将番号, n行動, true);
	int idx = anArray.Find(0, cnt, n武将番号);
	if (idx >= 0)
	{
		anArray.Erase(idx);
		--cnt;
	}
	戦闘エフェクト_作成(n武将番号, n行動, true);
	戦闘_スポット表示２(n武将番号, anArray);
	if (◆合戦味方ターン == 1)
	{
		戦闘_兵数表示(gs[0][n武将番号].兵数, -1);
	}
	if (◆合戦味方ターン == 2)
	{
		戦闘_兵数表示(-1, gs[0][n武将番号].兵数);
	}
	for (i = 0; i < cnt; ++i)
	{
		nターゲット = anArray[i];
		battle_recovery_multi(n武将番号, nターゲット, n行動, i == cnt - 1);
		合戦／行動後処理(n武将番号, nターゲット, n行動);
	}
	戦闘ユニット_攻撃(1, n行動, false);
	battle_recovery_show_multi(n武将番号, anArray);
	戦闘ユニット_通常(1, false);
	戦闘_兵数消去();
	戦闘エフェクト_削除();
	if (n行動 == 166 || n行動 == 222 || n行動 == 56)
	{
		for (i = 0; i < cnt; ++i)
		{
			戦闘_復帰(anArray[i]);
		}
	}
	return true;
}
